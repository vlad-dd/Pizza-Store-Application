{"version":3,"sources":["redux/CartReducer.js","Components/Header/Items.jsx","Components/Header/Cart.jsx","redux/FilterReducer.js","redux/PizzaReducer.js","Components/Header/Sort.jsx","Components/Header/Categories.jsx","Components/Main/Pizza.jsx","Components/Main/Container.jsx","Components/Header/Button.jsx","Components/Main/Main.jsx","Components/Header/Header.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["SET_PIZZA_TO_CART","GET_PIZZA_FROM_CART","DELETE_PIZZA_FROM_CART","SET_DUPLICATE","initialState","orderedItems","addedPizzas","deletedPizzas","duplicated","getPizzaActionCreator","pizza","type","newAddedPizza","CartReducer","state","action","newObj","pizzaToDelete","duplicate","Items","name","image","price","size","id","dispatch","useDispatch","filteredArray","useSelector","className","src","onClick","axios","delete","then","filter","item","Cart","orderInfo","total","PizzaReducer","qwewe","map","el","SET_SORT_BY","SET_CATEGORY","category","sortBy","setSortCategory","value","filterReducer","sortType","SET_PIZZA","SET_TOTAL_PRICE","SET_COUNT","pizzas","count","setPizza","newPizza","newCount","Sort","useState","categoryList","setCategoryList","setCategory","sortResult","sort","useRef","setCurrentCategory","i","handleClick","e","path","includes","current","useEffect","document","body","addEventListener","setAllCategoriesData","a","b","localeCompare","x","y","ref","width","height","viewBox","fill","xmlns","d","Categories","items","activeCategory","setActiveCategory","categoriesItems","index","Pizza","types","sizes","testClass","addedSize","setAddedSize","addedPizzaName","setAddedPizzaName","typeChoice","setTypeChoice","typeIndex","setTypeIndex","allOrderPizzas","setData","post","duplicatePizzaActionCreator","console","log","alt","currentType","setPizzaType","pizzaName","setPizzaSize","Container","sortedPizzasByCategory","get","response","data","pizzasFromRequest","rating","sorted","props","Button","to","href","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Main","Header","App","totalPrice","reduce","sum","obj","length","render","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.473e1f05.chunk.js","sourcesContent":["const SET_PIZZA_TO_CART = 'SET_PIZZA_TO_CART';\r\nconst GET_PIZZA_FROM_CART = 'GET_PIZZA_FROM_CART';\r\nconst DELETE_PIZZA_FROM_CART = 'DELETE_PIZZA_FROM_CART';\r\nconst SET_DUPLICATE = 'SET_DUPLICATE';\r\n\r\nlet initialState = {\r\n    orderedItems: [],\r\n    addedPizzas: [],\r\n    deletedPizzas: null,\r\n    duplicated: []\r\n}\r\n\r\nconst CartReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n\r\n        case SET_PIZZA_TO_CART : {\r\n            return {\r\n                ...state,\r\n                orderedItems: [...state.orderedItems, action.newObj]\r\n            }\r\n        }\r\n\r\n        case GET_PIZZA_FROM_CART: {\r\n            return {\r\n                ...state,\r\n                addedPizzas: action.newAddedPizza\r\n            }\r\n        }\r\n\r\n        case DELETE_PIZZA_FROM_CART: {\r\n            return {\r\n                ...state,\r\n                deletedPizzas: action.pizzaToDelete\r\n            }\r\n        }\r\n\r\n        case SET_DUPLICATE: {\r\n            return {\r\n                ...state,\r\n                duplicated:  [...state.duplicated, action.duplicate]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setPizzaActionCreator = (pizza) => {\r\n    return {\r\n        type: SET_PIZZA_TO_CART,\r\n        newObj: pizza\r\n    }\r\n}\r\n\r\nexport const getPizzaActionCreator = (pizza) => {\r\n    return {\r\n        type: GET_PIZZA_FROM_CART,\r\n        newAddedPizza: pizza\r\n    }\r\n}\r\n\r\nexport const deletePizzaActionCreator = (pizza) => {\r\n    return {\r\n        type: DELETE_PIZZA_FROM_CART,\r\n        pizzaToDelete: pizza\r\n    }\r\n}\r\n\r\nexport const duplicatePizzaActionCreator = (name, size, index) => {\r\n    return {\r\n        type: SET_DUPLICATE,\r\n        duplicate: {name, size, index}\r\n    }\r\n}\r\n\r\nexport default CartReducer;","import React, { useState } from 'react'\r\nimport './Cart.css'\r\nimport axios from 'axios';\r\nimport { deletePizzaActionCreator } from '../../redux/CartReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getPizzaActionCreator } from '../../redux/CartReducer';\r\nconst firstType = 'Тонке';\r\nconst secondType = 'Класичне';\r\n\r\n\r\n\r\nconst Items = ({name, image, price, size, type, id}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let filteredArray = useSelector(state => state.CartReducer.addedPizzas)\r\n\r\n\r\n    const getDataForDelete = () => {\r\n        axios.delete(`https://611aa466822cb00017cbc497.mockapi.io/Order/${id}`).then(() => {\r\n            dispatch(getPizzaActionCreator(filteredArray.filter(item => item.id !== id)))\r\n        })\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className='allPizzas'>\r\n            <div>{name}</div>\r\n            <div><img className='cart_img' src = {image}/></div>\r\n            <div>\r\n                <span>Size: {size}</span>\r\n                <div><span>Type: {type == 0 ? firstType : secondType}</span></div>\r\n            </div>\r\n            <div>{price} грн</div>\r\n            <div><img onClick={getDataForDelete} className='active_buttons' src='https://image.flaticon.com/icons/png/128/1828/1828778.png' /></div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items\r\n","import React, { useEffect, useState } from 'react'\r\nimport Home from './Home'\r\nimport axios from 'axios'\r\nimport Items from './Items'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n\r\nconst Cart = () => {\r\n\r\n    let orderInfo = useSelector(state => state.CartReducer.addedPizzas)\r\n\r\n    let total = useSelector(state => state.PizzaReducer.total)\r\n\r\n    let qwewe = orderInfo.map((el) => {\r\n            return ((<Items id = {el.id} name = {el.name} image = {el.image} size = {el.size} type = {el.type} price = {el.price} />))\r\n    })\r\n\r\n\r\n   \r\n   \r\n    return (\r\n        <div>\r\n            <div>\r\n            </div>\r\n            <div>\r\n                {qwewe}\r\n            </div>\r\n            <div>Total: {total}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;\r\n","const SET_SORT_BY = 'SET_SORT_BY';\r\nconst SET_CATEGORY = 'SET_CATEGORY';\r\n\r\nlet initialState = {\r\n    category: null,\r\n    sortBy: 'Популярності'\r\n}\r\n\r\nconst filterReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_SORT_BY: {\r\n            return {\r\n                ...state,\r\n                sortBy: action.sortType\r\n            }\r\n        }\r\n\r\n        case SET_CATEGORY: {\r\n            return {\r\n                ...state,\r\n                category: action.category\r\n            }\r\n\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setSortFilter = (type) => {\r\n    return {\r\n        type: SET_SORT_BY,\r\n        sortType: type\r\n    }\r\n}\r\n\r\nexport const setSortCategory = (value) => {\r\n    return {\r\n        type: SET_CATEGORY,\r\n        category: value\r\n    }\r\n}\r\n\r\nexport default filterReducer;","const SET_PIZZA = 'SET_PIZZA';\r\nconst SET_TOTAL_PRICE = 'SET_TOTAL_PRICE';\r\nconst SET_COUNT = 'SET_COUNT';\r\n\r\nlet initialState = {\r\n    pizzas: [],\r\n    total: 0,\r\n    count: 0\r\n}\r\n\r\nconst PizzaReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n\r\n        case SET_PIZZA: {\r\n            return {\r\n                ...state,\r\n                pizzas: action.pizza\r\n            }\r\n        }\r\n\r\n        case SET_TOTAL_PRICE: {\r\n            return {\r\n                ...state,\r\n                total: action.price\r\n            }\r\n        }\r\n\r\n        case SET_COUNT: {\r\n            return {\r\n                ...state,\r\n                count: action.newCount\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setPizza = (newPizza) => {\r\n    return {\r\n        type: SET_PIZZA,\r\n        pizza: newPizza\r\n    }\r\n}\r\n\r\nexport const setTotalActionCreator = (value) => {\r\n    return {\r\n        type: SET_TOTAL_PRICE,\r\n        price: value\r\n    }\r\n}\r\n\r\nexport const setCountActionCreator = (newValue) => {\r\n    return {\r\n        type: SET_COUNT,\r\n        newCount: newValue\r\n    }\r\n}\r\n\r\nexport default PizzaReducer;","import React, { useEffect, useRef, useState } from 'react';\r\nimport {setSortFilter} from '../../redux/FilterReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {setPizza} from '../../redux/PizzaReducer';\r\n\r\nconst Sort = () => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n    let sortBy = [`Популярності`, `Ціні`, `Алфавіту`]\r\n\r\n    const [categoryList, setCategoryList] = useState(false)\r\n\r\n    const [category, setCategory] = useState('')\r\n\r\n    const pizzas = useSelector(state => state.PizzaReducer.pizzas)\r\n\r\n    const sortResult = useSelector( state => state.filterReducer.sortBy)\r\n\r\n    const sort = useRef();\r\n\r\n    const getCategoriesForChoice = () => {\r\n        setCategoryList(!categoryList)\r\n    }\r\n\r\n    const setCurrentCategory = (i) => {\r\n        setCategory(i)\r\n        dispatch(setSortFilter(i))\r\n    }\r\n\r\n    \r\n\r\n   const handleClick = (e) => {\r\n        if(!e.path.includes(sort.current)) {\r\n            setCategoryList(false)\r\n        }       \r\n    }\r\n\r\n    useEffect(() => {\r\n        document.body.addEventListener('click', handleClick)\r\n    }, [])\r\n\r\n\r\n\r\n    const setAllCategoriesData = sortBy.map((el) => {\r\n        return (<li className={category == el ? 'active' : ''} onClick={() => {setCurrentCategory(el)}}>{el}</li>)\r\n     })\r\n\r\n      pizzas.map(() => {\r\n      switch(sortResult) {\r\n        case 'Алфавіту': {\r\n          dispatch(setPizza(pizzas.sort((a, b) => {\r\n           return a.name.localeCompare(b.name)\r\n          })))\r\n        }\r\n\r\n        case 'Ціні': {\r\n          dispatch(setPizza(pizzas.sort((x, y) => x.price - y.price)))}\r\n\r\n        default:\r\n          return pizzas\r\n       }\r\n     })\r\n\r\n    return (\r\n        <div>\r\n              <div ref = {sort} className=\"sort\">\r\n              <div className=\"sort__label\">\r\n                <svg\r\n                  className = {categoryList ? 'rotate' : ''}\r\n                  width=\"10\"\r\n                  height=\"6\"\r\n                  viewBox=\"0 0 10 6\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\" \r\n                  \r\n                >\r\n                  <path\r\n                    d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                    fill=\"#2C2C2C\"\r\n                  />\r\n                </svg>\r\n                <b>Сортування по:</b>\r\n                <span onClick = {getCategoriesForChoice}>{category ? category : 'Популярності'}</span>\r\n                {categoryList ?   <div> <div className=\"sort__popup\">\r\n                <ul>\r\n                    {setAllCategoriesData}\r\n                </ul>\r\n              </div></div> : <div></div>}\r\n              \r\n           \r\n              </div>\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sort\r\n","import React, { useState } from 'react'\r\nimport { setSortCategory } from '../../redux/FilterReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Categories = ({items}) => {\r\n\r\n    const [activeCategory, setActiveCategory] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const setActive = (name) => {\r\n        dispatch(setSortCategory(name))\r\n        setActiveCategory(name)\r\n    }\r\n\r\n    const setNull = (value) => {\r\n        dispatch(setSortCategory(value))\r\n        setActiveCategory(value)\r\n\r\n    }\r\n\r\n\r\n    let categoriesItems = items.map((i, index) => {\r\n        return <li className={activeCategory === i ? 'active': ''} onClick={() => {setActive(i)}} key={`${i}_${index}`} >{i}</li>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n             <div className=\"categories\">\r\n              <ul>\r\n                  <li className = {activeCategory == null ? 'active' : ''} onClick = {() => {setNull(null)}}>Всі</li>\r\n                {categoriesItems}\r\n               \r\n              </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Categories\r\n","import React, { useEffect, useMemo, useState } from 'react'\r\nimport axios from 'axios'\r\nimport './Container.css'\r\nimport {setPizzaActionCreator} from '../../redux/CartReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { duplicatePizzaActionCreator } from '../../redux/CartReducer'\r\n\r\nconst Pizza = ({name, image, price, types, sizes, setPizza, category, testClass, id }) => {\r\n  const dispatch = useDispatch();\r\n  \r\n    const [addedSize, setAddedSize] = useState(null)\r\n\r\n    const [addedPizzaName, setAddedPizzaName] = useState(null)\r\n\r\n\r\n    const [typeChoice, setTypeChoice] = useState(null)\r\n\r\n    const [typeIndex, setTypeIndex] = useState(null)\r\n\r\n    let allOrderPizzas = useSelector(state => state.CartReducer.addedPizzas)\r\n\r\n    const setData = (name, image, price) => {\r\n        axios.post('https://611aa466822cb00017cbc497.mockapi.io/Order', {name: name, image: image, price: price, size:addedSize, type:typeIndex}).then(() => {\r\n          dispatch(setPizzaActionCreator({name: name, image: image, price: price, size:addedSize, type:typeIndex}))\r\n         })\r\n\r\n        \r\n         allOrderPizzas.map((el) => {\r\n          el.name == name  && el.size == addedSize && el.type == typeIndex ? dispatch(duplicatePizzaActionCreator(name, addedSize, typeIndex)) : console.log('no')\r\n        })\r\n      } \r\n       \r\n\r\n \r\n    \r\n\r\n   const setPizzaSize = (size, pizzaName) => {\r\n      setAddedSize(size)\r\n      setAddedPizzaName(pizzaName)\r\n    }\r\n\r\n    const setPizzaType = (name, index) => {\r\n        setTypeChoice(name)\r\n        setTypeIndex(index)\r\n    }\r\n\r\n    return (\r\n    <div className='allPizzas'>\r\n     <div className=\"pizza-block\">\r\n       <div className={testClass}> <img\r\n          className=\"pizza-block__image\"\r\n          src={image}\r\n          alt=\"Pizza\"\r\n        /></div>\r\n       \r\n        <h4 className=\"pizza-block__title\">{name}</h4>\r\n        <div className=\"pizza-block__selector\">\r\n          <ul>\r\n            { types.map((currentType, index) => {\r\n        return <li onClick = {() => {setPizzaType(name, index)}} className={typeChoice ==  name && typeIndex == index ? 'active' : ''} >{currentType == 0 ? 'Тонке' : 'Класичне'}</li>})}\r\n          </ul>\r\n          <ul>\r\n          { sizes.map((size) => {\r\n        return <li className={addedSize == size && addedPizzaName == name ? 'active' : ''} onClick = {() => {setPizzaSize(size, name)}}>{size} см</li>\r\n\r\n    })}\r\n          </ul>\r\n        </div>\r\n        <div className=\"pizza-block__bottom\">\r\n          <div className=\"pizza-block__price\">{price} грн</div>\r\n          <div className=\"button button--outline button--add\">\r\n            <svg\r\n              width=\"12\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 12 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                fill=\"white\"\r\n              />\r\n            </svg>\r\n            <span onClick = {() => setData(name, image, price, id)}><span>Добавити</span></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Pizza\r\n","import Pizza from './Pizza'\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { setPizza } from '../../redux/PizzaReducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './Container.css'\r\n\r\n\r\nconst Container = () => {\r\n  \r\n  const dispatch = useDispatch()\r\n\r\n  const pizzas = useSelector(state => state.PizzaReducer.pizzas)\r\n\r\n  const sortResult = useSelector( state => state.filterReducer.sortBy)\r\n\r\n  const sortedPizzasByCategory = useSelector(state => state.filterReducer.category)\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('https://611aa466822cb00017cbc497.mockapi.io/AllPizzas').then((response) => {\r\n          dispatch(setPizza(response.data))\r\n        })\r\n      }, [sortResult])\r\n\r\n      let pizzasFromRequest = pizzas.map((el) => {\r\n        return (<Pizza id = {el.id} name = {el.name} image = {el.image} price = {el.price} types = {el.types} sizes = {el.sizes} category = {el.category} rating = {el.rating}/>)\r\n      })\r\n\r\n      let sorted = sortedPizzasByCategory == null ? pizzasFromRequest : pizzasFromRequest.filter(item => item.props.category.includes(sortedPizzasByCategory))\r\n          return (\r\n        <div>\r\n        <h2 className=\"content__title\">Всі піци</h2>\r\n          <div className=\"content__items\">\r\n            <div className='allPizzasContainer'>\r\n            {sortResult == 'Популярності' ? sorted.sort((a, b) => b.props.rating - a.props.rating)  : sorted}\r\n            </div> \r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Container;\r\n","import{ useSelector } from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\nimport '../Main/Container.css'\r\n\r\nconst Button = () => {\r\n  let total = useSelector(state => state.PizzaReducer.total)\r\n\r\n  let count = useSelector( state => state.PizzaReducer.count)\r\n\r\n    return (\r\n      <NavLink to='/cart'>\r\n        <div className='info_button'>\r\n             <a href=\"/cart.html\" className=\"button button--cart\">\r\n              <span>{total} грн</span>\r\n              <div className=\"button__delimiter\"></div>\r\n              <svg\r\n                width=\"18\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 18 18\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n                <path\r\n                  d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"1.8\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n              <span>{count}</span>\r\n            </a>\r\n        </div>\r\n      </NavLink>\r\n        \r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Sort from '../Header/Sort'\r\nimport Categories from '../Header/Categories'\r\nimport Pizza from './Pizza'\r\nimport  { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Container from './Container'\r\nimport Button from '../Header/Button'\r\nimport './Container.css'\r\n\r\n\r\nconst Main = () => {\r\n  \r\n  let items = [`М'ясні`, `Вегетеріанські`, `Гриль`, `Гострі`, `Закриті`]\r\n    return (\r\n        <div>\r\n         \r\n            \r\n        <div className=\"content\">\r\n        <div className=\"container\">\r\n          <div className=\"content__top\">\r\n           <Categories items = {items} />\r\n          <Sort />\r\n          <div>\r\n          <Button />\r\n          </div>\r\n          </div>\r\n          <Container />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n  \r\n    return (\r\n      <NavLink to='/home'>\r\n         <div>\r\n        <div className=\"header\">\r\n        <div className=\"container\">\r\n         \r\n          <div className=\"header__logo\">\r\n            <img className='logo_img' width=\"58\" src=\"https://image.flaticon.com/icons/png/128/1404/1404945.png\" alt=\"Pizza logo\" />\r\n            <div>\r\n              <h1>React Pizza</h1>\r\n              <p>Best pizza in the world</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"header__cart\"> \r\n          </div>\r\n        </div>\r\n      </div>\r\n        </div>\r\n      </NavLink>\r\n       \r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from 'react'\nimport { Route } from 'react-router-dom'\nimport Cart from './Components/Header/Cart'\nimport Main from './Components/Main/Main'\nimport Header from './Components/Header/Header'\nimport axios from 'axios'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getPizzaActionCreator } from './redux/CartReducer'\nimport { setTotalActionCreator, setCountActionCreator } from './redux/PizzaReducer'\n\nconst App = () => {\n\n  const dispatch = useDispatch()\n\n  let orderedItems = useSelector(state => state.CartReducer.orderedItems)\n\n  let orderInfo = useSelector(state => state.CartReducer.addedPizzas)\n\n  let deletedPizzas = useSelector(state => state.CartReducer.deletedPizzas)\n\n  let totalPrice = orderInfo.reduce((sum, obj) => obj.price + sum, 0)\n\n  let count = orderInfo.length;\n\n    useEffect(() => {\n        axios.get('https://611aa466822cb00017cbc497.mockapi.io/Order').then((response) => {\n          dispatch(getPizzaActionCreator(response.data))\n        })\n    }, [orderedItems])\n\n\n\n    useEffect(() => {\n      dispatch(setTotalActionCreator(totalPrice))\n      dispatch(setCountActionCreator(count))\n  }, [orderInfo])\n\n  \n\n\n  return (\n    <div>\n   <div className=\"wrapper\">\n   <Route path='/' render={Header} /> \n   <Route exact path='/cart' component={() => <Cart/>} /> \n   <Route path='/home' render={Main} /> \n      \n    </div>\n    </div>\n  )\n}\n\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers} from 'redux';\r\nimport filterReducer from './FilterReducer';\r\nimport PizzaReducer from './PizzaReducer';\r\nimport CartReducer from './CartReducer';\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers(\r\n    {filterReducer: filterReducer,\r\n    PizzaReducer:PizzaReducer,\r\n    CartReducer:CartReducer}\r\n    );\r\n\r\nconst store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './scss/app.scss'\nimport {BrowserRouter} from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store = {store}>\n    <App />\n    </Provider>\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}